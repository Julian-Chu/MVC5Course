@model IEnumerable<MVC5Course.Models.Product>


@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<p>
    <form>
        @*<input type="search" name="keyword" value="" />*@
        @Html.TextBox("keyword")
        <input type="submit" value="搜尋" />
<p>keyword:@ViewBag.keyword</p>
    </form>
</p>
@*@using PagedList
    @using PagedList.Mvc

    @Html.PagedListPager(Model as IPagedList, p => Url.Action("Index", new { pageNo = p, keyword = ViewBag.keyword }));*@
@Html.Partial("_Pager", Model)
@using (Html.BeginForm())
{
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                <a href="@Url.Action("Index", "Products", new { sortBy = "+Price", keyword = ViewBag.keyword, pageNo = ViewBag.pageNo })">↑</a>
                @Html.DisplayNameFor(model => model.Price)
                <a href="@Url.Action("Index", "Products", new { sortBy = "-Price", keyword = ViewBag.keyword, pageNo = ViewBag.pageNo })">↓</a>

            </th>
            <th>
                @Html.DisplayNameFor(model => model.Active)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Stock)
            </th>
            <th></th>
        </tr>

        @{
            var data = Model.ToArray();
        }
        @*@foreach (var item in Model)*@
        @for (int i = 0; i < data.Count(); i++)
        {
            @Html.HiddenFor(modelItem => data[i].ProductId)
            <tr>
                <td>
                    @*@Html.DisplayFor(modelItem => item.ProductName)*@
                    @*@Html.EditorFor(modelItem => data[i].ProductName)*@
                    @Html.EditorFor(modelItem => data[i].ProductName, null, "data[" + i + "].ProductName")
                    @Html.ValidationMessageFor(modelItem => data[i].ProductName)
                </td>
                <td class="@(data[i].Price > 100 ? "text-danger" : "")">
                    @*NT$ @Html.DisplayFor(modelItem => item.Price)*@
                    @Html.EditorFor(modelItem => data[i].Price)
                    @Html.ValidationMessageFor(modelItem => data[i].Price)
                </td>
                <td>
                    @*@Html.DisplayFor(modelItem => item.Active)*@
                    @Html.EditorFor(modelItem => data[i].Active)
                    @Html.ValidationMessageFor(modelItem => data[i].Active)
                </td>
                <td>
                    @*@Html.DisplayFor(modelItem => item.Stock)*@
                    @Html.EditorFor(modelItem => data[i].Stock)
                    @Html.ValidationMessageFor(modelItem => data[i].Stock)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = data[i].ProductId }) |
                    @Html.ActionLink("Details", "Details", new { id = data[i].ProductId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = data[i].ProductId })
                </td>
            </tr>
        }
    </table>
    <input type="submit" value="送出"/>
            }

